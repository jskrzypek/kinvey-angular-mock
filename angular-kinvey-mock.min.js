!function(){"use strict";function e(e){var r={},n={};return n.id="mock123456mock123456mock",n.acl={creator:n.id},n.lmt="2014-12-19T16:56:47.527Z",n.ect="2014-12-19T16:56:47.527Z",n.kmd={lmt:n.lmt,ect:n.ect},n.username="mockUser123",n.password="mockPassword",n.password="mock@email.com",n.user={_id:n.id,_acl:{creator:n.id},_kmd:{ect:"",lmt:""},username:n.username,password:n.password,email:n.email},r.API_ENDPOINT="https://angular.kinvey.mock",r.API_VERSION="X",r.SDK_VERSION="x.x.x",r.getActiveUser=function(){var r=e.defer();return r.resolve(n.user),r.promise},r.init=function(){var r=e.defer();return r.resolve(n.user),r.promise},r.ping=function(){var r=e.defer();return r.resolve({version:"x.x.x",kinvey:"hello Mock App",appName:"Mock App",environmentName:"Mock Environment"}),r.promise},r.Query=function(){r.Query.prototype.and=function(){return new r.Query},r.Query.prototype.ascending=function(){return new r.Query},r.Query.prototype.contains=function(){return new r.Query},r.Query.prototype.containsAll=function(){return new r.Query},r.Query.prototype.descending=function(){return new r.Query},r.Query.prototype.equalTo=function(){return new r.Query},r.Query.prototype.exists=function(){return new r.Query},r.Query.prototype.fields=function(){return new r.Query},r.Query.prototype.greaterThan=function(){return new r.Query},r.Query.prototype.greaterThanOrEqualTo=function(){return new r.Query},r.Query.prototype.lessThan=function(){return new r.Query},r.Query.prototype.lessThanOrEqualTo=function(){return new r.Query},r.Query.prototype.limit=function(){return new r.Query},r.Query.prototype.matches=function(){return new r.Query},r.Query.prototype.mod=function(){return new r.Query},r.Query.prototype.near=function(){return new r.Query},r.Query.prototype.nor=function(){return new r.Query},r.Query.prototype.notContainedIn=function(){return new r.Query},r.Query.prototype.notEqualTo=function(){return new r.Query},r.Query.prototype.or=function(){return new r.Query},r.Query.prototype.size=function(){return new r.Query},r.Query.prototype.skip=function(){return new r.Query},r.Query.prototype.sort=function(){return new r.Query},r.Query.prototype.toJSON=function(){return new r.Query},r.Query.prototype.withinBox=function(){return new r.Query},r.Query.prototype.withinPolygon=function(){return new r.Query}},r.File={upload:function(r){var n=e.defer();return r?n.resolve("mock File.upload success"):n.reject("mock File.upload fail, missing file"),n.promise},destroy:function(r){var n=e.defer();return r?n.resolve("mock File.destroy success"):n.reject("mock File.destroy fail, missing fileId"),n.promise},stream:function(r){var n=e.defer();return r?n.resolve("mock File.stream success"):n.reject("mock File.stream fail, missing fileId"),n.promise}},r.User={},r}e.$inject=["$q"],angular.module("kinvey-mock",[]).factory("$kinvey",e)}();