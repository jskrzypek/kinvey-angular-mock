!function(){"use strict";function e(e){var n={},t={};return t.id="mock123456mock123456mock",t.acl={creator:t.id},t.lmt="2014-12-19T16:56:47.527Z",t.ect="2014-12-19T16:56:47.527Z",t.kmd={lmt:t.lmt,ect:t.ect},t.username="mockUser123",t.password="mockPassword",t.password="mock@email.com",t.user={_id:t.id,_acl:{creator:t.id},_kmd:{ect:"",lmt:""},username:t.username,password:t.password,email:t.email},n.API_ENDPOINT="https://angular.kinvey.mock",n.API_VERSION="X",n.SDK_VERSION="x.x.x",n.getActiveUser=function(){var n=e.defer();return n.resolve(t.user),n.promise},n.init=function(){var n=e.defer();return n.resolve(t.user),n.promise},n.ping=function(){var n=e.defer();return n.resolve({version:"x.x.x",kinvey:"hello Mock App",appName:"Mock App",environmentName:"Mock Environment"}),n.promise},n.Query=function(){var e=function(){};e.prototype.and=function(){return new e},e.prototype.ascending=function(){return new e},e.prototype.contains=function(){return new e},e.prototype.containsAll=function(){return new e},e.prototype.descending=function(){return new e},e.prototype.equalTo=function(){return new e},e.prototype.exists=function(){return new e},e.prototype.fields=function(){return new e},e.prototype.greaterThan=function(){return new e},e.prototype.greaterThanOrEqualTo=function(){return new e},e.prototype.lessThan=function(){return new e},e.prototype.lessThanOrEqualTo=function(){return new e},e.prototype.limit=function(){return new e},e.prototype.matches=function(){return new e},e.prototype.mod=function(){return new e},e.prototype.near=function(){return new e},e.prototype.nor=function(){return new e},e.prototype.notContainedIn=function(){return new e},e.prototype.notEqualTo=function(){return new e},e.prototype.or=function(){return new e},e.prototype.size=function(){return new e},e.prototype.skip=function(){return new e},e.prototype.sort=function(){return new e},e.prototype.toJSON=function(){return new e},e.prototype.withinBox=function(){return new e},e.prototype.withinPolygon=function(){return new e}},n.File={upload:function(n){var t=e.defer();return n?t.resolve("mock File.upload success"):t.reject("mock File.upload fail, missing file"),t.promise},destroy:function(n){var t=e.defer();return n?t.resolve("mock File.destroy success"):t.reject("mock File.destroy fail, missing fileId"),t.promise},stream:function(n){var t=e.defer();return n?t.resolve("mock File.stream success"):t.reject("mock File.stream fail, missing fileId"),t.promise}},n.User={},n}e.$inject=["$q"],angular.module("kinvey-mock",[]).factory("$kinvey",e)}();